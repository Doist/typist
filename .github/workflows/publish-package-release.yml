name: Package Release

on:
    workflow_run:
        workflows:
            - CI Validation
        branches:
            - main
        types:
            - completed

env:
    GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}

permissions:
    # Enable the use of OIDC for trusted publishing and npm provenance
    id-token: write
    # Enable the use of GitHub Packages registry
    packages: write
    # Enable `semantic-release` to publish a GitHub release
    contents: write
    # Enable `semantic-release` to post comments on issues
    issues: write
    # Enable `semantic-release` to post comments on pull requests
    pull-requests: write

# The release workflow involves many crucial steps that once triggered shouldn't be cancelled until
# finished, otherwise we might end up in an inconsistent state (e.g., published to GitHub Packages
# but not npm), so new workflow runs are queued until the previous one has completely finished.
concurrency:
    group: ${{ github.workflow }}
    cancel-in-progress: false

jobs:
    release-and-publish:
        name: Release & Publish
        runs-on: ubuntu-latest
        timeout-minutes: 60

        if: github.event.workflow_run.conclusion == 'success'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v5
              with:
                  token: ${{ secrets.GH_REPO_TOKEN }}

            - name: Prepare Node.js environment
              uses: actions/setup-node@v6
              with:
                  cache: npm
                  node-version-file: .node-version

            - name: Cache project 'node_modules' directory
              id: node-modules-cache
              uses: actions/cache@v4
              with:
                  key: node-modules-cache-${{ hashFiles('**/package-lock.json', '**/.node-version') }}
                  path: node_modules/

            - name: Install project npm dependencies
              if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
              run: |
                  npm ci

            - name: Build package
              run: |
                  npm run build

            # The Node.js environment is prepared based on the `.npmrc` file in the repo, which
            # configures Doist scoped packages to use the public npm registry with OIDC
            # authentication for the initial `semantic-release` publish, after which we remove the
            # Doist registry configuration, and prepare the Node.js environment for the GitHub
            # Packages registry, providing a predictable release workflow for both registries.

            - name: Publish package to public npm registry
              id: semantic-release
              run: |
                  npx semantic-release
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_REPO_TOKEN }}
                  GIT_AUTHOR_EMAIL: doistbot@users.noreply.github.com
                  GIT_AUTHOR_NAME: Doist Bot
                  GIT_COMMITTER_EMAIL: doistbot@users.noreply.github.com
                  GIT_COMMITTER_NAME: Doist Bot

            - name: Remove Doist registry configuration from `.npmrc`
              if: ${{ steps.semantic-release.outputs.package-published == 'true' }}
              run: |
                  npm config delete @doist:registry --location=project

            - name: Prepare Node.js environment for GitHub Packages registry
              uses: actions/setup-node@v6
              if: ${{ steps.semantic-release.outputs.package-published == 'true' }}
              with:
                  cache: npm
                  node-version-file: .node-version
                  registry-url: https://npm.pkg.github.com/
                  scope: '@doist'

            - name: Publish package to private GitHub Packages registry
              if: ${{ steps.semantic-release.outputs.package-published == 'true' }}
              run: |
                  npm publish
